***************
** Arguments **
***************
backbone: 
calibration: True
config_file: configs/trainers/CoOp/rn50.yaml
cutrate: 0.4
dataset_config_file: configs/datasets/eurosat.yaml
eval_only: True
head: 
load_epoch: None
model_dir: 
no_train: False
opts: []
output_dir: output/ZeroshotCLIP3/rn50/eurosat
relevance_refine: False
resume: 
root: /ix/yufeihuang/jia/nlp/prompt/data
seed: -1
source_domains: None
target_domains: None
trainer: ZeroshotCLIP3
transforms: None
vb_dir: /ihome/yufeihuang/jiy130/Prompt/CoOp/knowledgebase
vbsize: 45
verbalizer: True
************
** Config **
************
CALIBRATION: True
CALIBRATION_CUT: 0.4
DATALOADER:
  K_TRANSFORMS: 1
  NUM_WORKERS: 8
  RETURN_IMG0: False
  TEST:
    BATCH_SIZE: 100
    SAMPLER: SequentialSampler
  TRAIN_U:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAME_AS_X: True
    SAMPLER: RandomSampler
  TRAIN_X:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAMPLER: RandomSampler
DATASET:
  ALL_AS_UNLABELED: False
  CIFAR_C_LEVEL: 1
  CIFAR_C_TYPE: 
  NAME: EuroSAT
  NUM_LABELED: -1
  NUM_SHOTS: -1
  ROOT: /ix/yufeihuang/jia/nlp/prompt/data
  SOURCE_DOMAINS: ()
  STL10_FOLD: -1
  SUBSAMPLE_CLASSES: all
  TARGET_DOMAINS: ()
  VAL_PERCENT: 0.1
INPUT:
  COLORJITTER_B: 0.4
  COLORJITTER_C: 0.4
  COLORJITTER_H: 0.1
  COLORJITTER_S: 0.4
  CROP_PADDING: 4
  CUTOUT_LEN: 16
  CUTOUT_N: 1
  GB_K: 21
  GB_P: 0.5
  GN_MEAN: 0.0
  GN_STD: 0.15
  INTERPOLATION: bicubic
  NO_TRANSFORM: False
  PIXEL_MEAN: [0.48145466, 0.4578275, 0.40821073]
  PIXEL_STD: [0.26862954, 0.26130258, 0.27577711]
  RANDAUGMENT_M: 10
  RANDAUGMENT_N: 2
  RGS_P: 0.2
  RRCROP_SCALE: (0.08, 1.0)
  SIZE: (224, 224)
  TRANSFORMS: ('random_resized_crop', 'random_flip', 'normalize')
MODEL:
  BACKBONE:
    NAME: RN50
    PRETRAINED: True
  HEAD:
    ACTIVATION: relu
    BN: True
    DROPOUT: 0.0
    HIDDEN_LAYERS: ()
    NAME: 
  INIT_WEIGHTS: 
OPTIM:
  ADAM_BETA1: 0.9
  ADAM_BETA2: 0.999
  BASE_LR_MULT: 0.1
  GAMMA: 0.1
  LR: 0.002
  LR_SCHEDULER: cosine
  MAX_EPOCH: 200
  MOMENTUM: 0.9
  NAME: sgd
  NEW_LAYERS: ()
  RMSPROP_ALPHA: 0.99
  SGD_DAMPNING: 0
  SGD_NESTEROV: False
  STAGED_LR: False
  STEPSIZE: (-1,)
  WARMUP_CONS_LR: 1e-05
  WARMUP_EPOCH: 1
  WARMUP_MIN_LR: 1e-05
  WARMUP_RECOUNT: True
  WARMUP_TYPE: constant
  WEIGHT_DECAY: 0.0005
OUTPUT_DIR: output/ZeroshotCLIP3/rn50/eurosat
RELEVANCE_REFINE: False
RESUME: 
SEED: -1
TEST:
  COMPUTE_CMAT: False
  EVALUATOR: Classification
  FINAL_MODEL: last_step
  NO_TEST: False
  PER_CLASS_RESULT: False
  SPLIT: test
TRAIN:
  CHECKPOINT_FREQ: 0
  COUNT_ITER: train_x
  PRINT_FREQ: 5
TRAINER:
  CDAC:
    CLASS_LR_MULTI: 10
    P_THRESH: 0.95
    RAMPUP_COEF: 30
    RAMPUP_ITRS: 1000
    STRONG_TRANSFORMS: ()
    TOPK_MATCH: 5
  COCOOP:
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  COOP:
    CLASS_TOKEN_POSITION: end
    CSC: False
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  CROSSGRAD:
    ALPHA_D: 0.5
    ALPHA_F: 0.5
    EPS_D: 1.0
    EPS_F: 1.0
  DAEL:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DAELDG:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DDAIG:
    ALPHA: 0.5
    CLAMP: False
    CLAMP_MAX: 1.0
    CLAMP_MIN: -1.0
    G_ARCH: 
    LMDA: 0.3
    WARMUP: 0
  DOMAINMIX:
    ALPHA: 1.0
    BETA: 1.0
    TYPE: crossdomain
  ENTMIN:
    LMDA: 0.001
  FIXMATCH:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 1.0
  M3SDA:
    LMDA: 0.5
    N_STEP_F: 4
  MCD:
    N_STEP_F: 4
  MEANTEACHER:
    EMA_ALPHA: 0.999
    RAMPUP: 5
    WEIGHT_U: 1.0
  MIXMATCH:
    MIXUP_BETA: 0.75
    RAMPUP: 20000
    TEMP: 2.0
    WEIGHT_U: 100.0
  MME:
    LMDA: 0.1
  NAME: ZeroshotCLIP3
  SE:
    CONF_THRE: 0.95
    EMA_ALPHA: 0.999
    RAMPUP: 300
USE_CUDA: True
VERBALIZER:
  DIR: /ihome/yufeihuang/jiy130/Prompt/CoOp/knowledgebase/EuroSAT
  SIZE: 45
VERBOSE: True
VERSION: 1
Collecting env info ...
** System info **
PyTorch version: 1.13.1
Is debug build: False
CUDA used to build PyTorch: 11.7
ROCM used to build PyTorch: N/A

OS: Red Hat Enterprise Linux (x86_64)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
Clang version: Could not collect
CMake version: Could not collect
Libc version: glibc-2.17

Python version: 3.8.16 (default, Jan 17 2023, 23:13:24)  [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-3.10.0-1160.71.1.el7.x86_64-x86_64-with-glibc2.17
Is CUDA available: True
CUDA runtime version: Could not collect
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: 
GPU 0: NVIDIA A100-PCIE-40GB
GPU 1: NVIDIA A100-PCIE-40GB
GPU 2: NVIDIA A100-PCIE-40GB
GPU 3: NVIDIA A100-PCIE-40GB

Nvidia driver version: 515.65.01
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

Versions of relevant libraries:
[pip3] numpy==1.23.5
[pip3] torch==1.13.1
[pip3] torchaudio==0.13.1
[pip3] torchvision==0.14.1
[conda] blas                      1.0                         mkl  
[conda] cudatoolkit               11.3.1               h2bc3f7f_2  
[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch
[conda] mkl                       2021.4.0           h06a4308_640  
[conda] mkl-service               2.4.0            py38h7f8727e_0  
[conda] mkl_fft                   1.3.1            py38hd3c417c_0  
[conda] mkl_random                1.2.2            py38h51133e4_0  
[conda] numpy                     1.23.5           py38h14f4228_0  
[conda] numpy-base                1.23.5           py38h31eccc5_0  
[conda] pytorch                   1.13.1          py3.8_cuda11.7_cudnn8.5.0_0    pytorch
[conda] pytorch-cuda              11.7                 h778d358_3    pytorch
[conda] pytorch-mutex             1.0                        cuda    pytorch
[conda] torchaudio                0.13.1               py38_cu117    pytorch
[conda] torchvision               0.14.1               py38_cu117    pytorch
        Pillow (9.4.0)

Loading trainer: ZeroshotCLIP3
Loading dataset: EuroSAT
Reading split from /ix/yufeihuang/jia/nlp/prompt/data/eurosat/split_zhou_EuroSAT.json
Building transform_train
+ random resized crop (size=(224, 224), scale=(0.08, 1.0))
+ random flip
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
---------  -------
Dataset    EuroSAT
# classes  10
# train_x  13,500
# val      5,400
# test     8,100
---------  -------
['Annual Crop Land', 'Forest', 'Herbaceous Vegetation Land', 'Highway or Road', 'Industrial Buildings', 'Pasture Land', 'Permanent Crop Land', 'Residential Buildings', 'River', 'Sea or Lake']
Loading CLIP (backbone: RN50)
Selected examples (mixed) [5140, 3898, 3706, 565, 10324, 12921, 5257, 4139, 1491, 10063, 9654, 1900, 8409, 10223, 3991, 3394, 4381, 4655, 1686, 2454, 5897, 4632, 5720, 9331, 6511, 625, 3992, 1085, 13456, 1488, 477, 12594, 6401, 5550, 4059, 4063, 12859, 6568, 6130, 7497, 1912, 11861, 5824, 9374, 7362, 10825, 12250, 1563, 1374, 2054, 721, 685, 11114, 13036, 1748, 50, 836, 12576, 2334, 1693, 6009, 13083, 2585, 6170, 11858, 11419, 10697, 8593, 12103, 1031, 4420, 5267, 9075, 5771, 1324, 11095, 5923, 2314, 11811, 8177, 6793, 7066, 13141, 10330, 12017, 9156, 2728, 3963, 12558, 3450, 6270, 8365, 2941, 5221, 1936, 12142, 8087, 13256, 6252, 6644, 2496, 8119, 8388, 7721, 1105, 5307, 6154, 6602, 12770, 11671, 2428, 2816, 9110, 2057, 5048, 11524, 11991, 742, 2377, 8539, 4789, 6889, 3582, 5200, 8895, 2683, 20, 7991, 12401, 2547, 11659, 2022, 558, 5484, 6095, 4261, 11086, 1009, 12640, 7774, 4805, 6321, 3131, 10793, 407, 1442, 3491, 11116, 10436, 9479, 5995, 12378, 4688, 2536, 4682, 4457, 3353, 10513, 968, 2767, 13491, 8991, 5906, 8227, 6226, 3827, 2693, 1382, 9762, 6167, 6728, 10705, 3913, 12415, 11644, 10701, 8340, 6114, 5440, 2960, 1499, 11663, 2243, 9804, 1553, 3905, 12572, 3736, 9985, 6439, 3880, 11939, 9344, 7029, 1298, 12480, 2620, 1858, 309, 5205]
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Load support dataloader successfully! size: 200
num of org label words: 314
cali text features shape: torch.Size([314, 1024])
the calibration logits is tensor([[22.1562, 20.7188, 22.8750,  ..., 20.4375, 22.6406, 22.9844],
        [22.5625, 21.3281, 22.9531,  ..., 23.2031, 22.8281, 23.3750],
        [25.9688, 25.7031, 26.1719,  ..., 25.1875, 26.0625, 25.4062],
        ...,
        [21.9844, 22.2969, 23.6406,  ..., 21.7812, 22.7812, 23.7812],
        [20.7656, 20.9844, 20.7188,  ..., 18.2344, 20.6562, 20.9688],
        [21.8281, 21.8438, 22.8594,  ..., 20.6406, 22.3281, 23.2812]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>)
cc_logits shape: torch.Size([200, 314])
Phase 1 [29, 46, 40, 26, 3, 38, 38, 29, 36, 29]

register_calibrate_logits starting shape: torch.Size([314])
logits shape -1 :314
rm_calibrate_ids: {0, 1, 3, 7, 10, 12, 13, 15, 16, 17, 22, 23, 27, 42, 43, 47, 51, 55, 68, 72, 75, 87, 96, 98, 99, 100, 104, 107, 108, 109, 111, 112, 113, 124, 128, 130, 132, 133, 134, 138, 140, 141, 142, 143, 147, 150, 152, 153, 167, 169, 171, 173, 174, 179, 181, 182, 184, 189, 190, 199, 218, 220, 226, 228, 230, 232, 234, 235, 236, 237, 241, 242, 243, 244, 246, 247, 249, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311}, shape 125
Phase 2 [17, 39, 28, 18, 1, 27, 33, 15, 14, 4]

num of label words after cc: 196
cali_logits shape: torch.Size([196])
Prompts: ['a centered satellite photo of annual crop land.', 'a centered satellite photo of seed.', 'a centered satellite photo of therophyte.', 'a centered satellite photo of carrot.', 'a centered satellite photo of celery.', 'a centered satellite photo of parsley.', 'a centered satellite photo of tomato.', 'a centered satellite photo of brassica rapa.', 'a centered satellite photo of mirabilis.', 'a centered satellite photo of petunia.', 'a centered satellite photo of antirrhinum.', 'a centered satellite photo of wheat.', 'a centered satellite photo of rice.', 'a centered satellite photo of sweet potato.', 'a centered satellite photo of pea.', 'a centered satellite photo of bell pepper.', 'a centered satellite photo of bean.', 'a centered satellite photo of forest.', 'a centered satellite photo of forward.', 'a centered satellite photo of front.', 'a centered satellite photo of bow.', 'a centered satellite photo of foremost.', 'a centered satellite photo of stem.', 'a centered satellite photo of prow.', 'a centered satellite photo of anterior.', 'a centered satellite photo of aft.', 'a centered satellite photo of nose.', 'a centered satellite photo of lateral.', 'a centered satellite photo of forefront.', 'a centered satellite photo of seafaring.', 'a centered satellite photo of watercraft.', 'a centered satellite photo of vessel.', 'a centered satellite photo of frontline.', 'a centered satellite photo of frontward.', 'a centered satellite photo of forepart.', 'a centered satellite photo of starboard.', 'a centered satellite photo of frontwise.', 'a centered satellite photo of vanward.', 'a centered satellite photo of hind.', 'a centered satellite photo of superstructure.', 'a centered satellite photo of nostrils.', 'a centered satellite photo of wings.', 'a centered satellite photo of cowl.', 'a centered satellite photo of fuselage.', 'a centered satellite photo of inboard.', 'a centered satellite photo of conning.', 'a centered satellite photo of rails.', 'a centered satellite photo of frontage.', 'a centered satellite photo of tail.', 'a centered satellite photo of shoulders.', 'a centered satellite photo of shorefront.', 'a centered satellite photo of tailplane.', 'a centered satellite photo of flaps.', 'a centered satellite photo of rudders.', 'a centered satellite photo of afore.', 'a centered satellite photo of paws.', 'a centered satellite photo of herbaceous vegetation land.', 'a centered satellite photo of herbaceous.', 'a centered satellite photo of herb.', 'a centered satellite photo of fern.', 'a centered satellite photo of shrub.', 'a centered satellite photo of botany.', 'a centered satellite photo of plant stem.', 'a centered satellite photo of perennial.', 'a centered satellite photo of monocotyledonous.', 'a centered satellite photo of annual plant.', 'a centered satellite photo of rhizome.', 'a centered satellite photo of nonwoody.', 'a centered satellite photo of rhizomes.', 'a centered satellite photo of herbal.', 'a centered satellite photo of rosemary.', 'a centered satellite photo of rhizomatous.', 'a centered satellite photo of gentian.', 'a centered satellite photo of fennel.', 'a centered satellite photo of shrubby.', 'a centered satellite photo of bulb.', 'a centered satellite photo of flora.', 'a centered satellite photo of ground cover.', 'a centered satellite photo of scrub.', 'a centered satellite photo of excrescence.', 'a centered satellite photo of shrubbery.', 'a centered satellite photo of groundcover.', 'a centered satellite photo of understory.', 'a centered satellite photo of trees.', 'a centered satellite photo of highway or road.', 'a centered satellite photo of pavement.', 'a centered satellite photo of thoroughfare.', 'a centered satellite photo of street.', 'a centered satellite photo of trail.', 'a centered satellite photo of bridge.', 'a centered satellite photo of pedestrian.', 'a centered satellite photo of way.', 'a centered satellite photo of drive.', 'a centered satellite photo of causeway.', 'a centered satellite photo of roadbed.', 'a centered satellite photo of path.', 'a centered satellite photo of traffic.', 'a centered satellite photo of interstate.', 'a centered satellite photo of turnpike.', 'a centered satellite photo of thruway.', 'a centered satellite photo of roads.', 'a centered satellite photo of overpass.', 'a centered satellite photo of industrial buildings.', 'a centered satellite photo of pasture land.', 'a centered satellite photo of graze.', 'a centered satellite photo of grass.', 'a centered satellite photo of forage.', 'a centered satellite photo of cattle.', 'a centered satellite photo of livestock.', 'a centered satellite photo of sheep.', 'a centered satellite photo of meadow.', 'a centered satellite photo of rangeland.', 'a centered satellite photo of browse.', 'a centered satellite photo of cow pasture.', 'a centered satellite photo of lea.', 'a centered satellite photo of pasturage.', 'a centered satellite photo of manure.', 'a centered satellite photo of goat.', 'a centered satellite photo of feed.', 'a centered satellite photo of land.', 'a centered satellite photo of fodder.', 'a centered satellite photo of ley.', 'a centered satellite photo of rural area.', 'a centered satellite photo of grassy.', 'a centered satellite photo of arable.', 'a centered satellite photo of barnyard.', 'a centered satellite photo of cropland.', 'a centered satellite photo of cows.', 'a centered satellite photo of crops.', 'a centered satellite photo of herd.', 'a centered satellite photo of permanent crop land.', 'a centered satellite photo of harvest.', 'a centered satellite photo of craw.', 'a centered satellite photo of intercrop.', 'a centered satellite photo of orchard.', 'a centered satellite photo of plantation.', 'a centered satellite photo of stubble.', 'a centered satellite photo of cornfield.', 'a centered satellite photo of miscrop.', 'a centered satellite photo of corn.', 'a centered satellite photo of paddy.', 'a centered satellite photo of farmer.', 'a centered satellite photo of uncropped.', 'a centered satellite photo of alfalfa.', 'a centered satellite photo of haulm.', 'a centered satellite photo of cultivate.', 'a centered satellite photo of grainfield.', 'a centered satellite photo of agricultural.', 'a centered satellite photo of wheatfield.', 'a centered satellite photo of maizefield.', 'a centered satellite photo of cultivable.', 'a centered satellite photo of overcrop.', 'a centered satellite photo of pasture.', 'a centered satellite photo of cornstalk.', 'a centered satellite photo of husbandry.', 'a centered satellite photo of agroecosystem.', 'a centered satellite photo of corny.', 'a centered satellite photo of cornstarch.', 'a centered satellite photo of rowen.', 'a centered satellite photo of aftergrass.', 'a centered satellite photo of aftergrowth.', 'a centered satellite photo of zein.', 'a centered satellite photo of field.', 'a centered satellite photo of residential buildings.', 'a centered satellite photo of zoning.', 'a centered satellite photo of subdivision.', 'a centered satellite photo of houses.', 'a centered satellite photo of rural.', 'a centered satellite photo of deed.', 'a centered satellite photo of commercial area.', 'a centered satellite photo of multi-family residential.', 'a centered satellite photo of house.', 'a centered satellite photo of bespoke.', 'a centered satellite photo of transport infrastructure.', 'a centered satellite photo of restrictive covenant.', 'a centered satellite photo of speculation.', 'a centered satellite photo of real property.', 'a centered satellite photo of elevation.', 'a centered satellite photo of river.', 'a centered satellite photo of billabong.', 'a centered satellite photo of channel.', 'a centered satellite photo of confluence.', 'a centered satellite photo of watercourse.', 'a centered satellite photo of tunguska.', 'a centered satellite photo of adige.', 'a centered satellite photo of arno.', 'a centered satellite photo of james.', 'a centered satellite photo of avon.', 'a centered satellite photo of ebro.', 'a centered satellite photo of acheron.', 'a centered satellite photo of rill.', 'a centered satellite photo of mackenzie.', 'a centered satellite photo of sea or lake.', 'a centered satellite photo of tarn.', 'a centered satellite photo of salt.', 'a centered satellite photo of pigment.']
text feature size: torch.Size([196, 1024])
Loading evaluator: Classification
Note that load_model() is skipped as no pretrained model is given (ignore this if it's done on purpose)
Evaluate on the *test* set
=> result
* total: 8,100
* correct: 2,790
* accuracy: 34.4%
* error: 65.6%
* macro_f1: 32.6%
