***************
** Arguments **
***************
backbone: 
calibration: False
config_file: configs/trainers/CoOp/rn50.yaml
cutrate: None
dataset: ucf101
dataset_config_file: configs/datasets/ucf101.yaml
eval_only: True
head: 
load_epoch: None
model_dir: 
no_train: False
opts: []
output_dir: output/ZeroshotCLIP3/rn50/ucf101
relevance_refine: False
resume: 
root: /ix/yufeihuang/jia/nlp/prompt/data
seed: -1
source_domains: None
target_domains: None
trainer: ZeroshotCLIP3
transforms: None
vb_dir: /ihome/yufeihuang/jiy130/Prompt/CoOp/knowledgebase
vbsize: 1
verbalizer: True
************
** Config **
************
CALIBRATION: False
CALIBRATION_CUT: 0
DATALOADER:
  K_TRANSFORMS: 1
  NUM_WORKERS: 8
  RETURN_IMG0: False
  TEST:
    BATCH_SIZE: 100
    SAMPLER: SequentialSampler
  TRAIN_U:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAME_AS_X: True
    SAMPLER: RandomSampler
  TRAIN_X:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAMPLER: RandomSampler
DATASET:
  ALL_AS_UNLABELED: False
  CIFAR_C_LEVEL: 1
  CIFAR_C_TYPE: 
  NAME: UCF101
  NUM_LABELED: -1
  NUM_SHOTS: -1
  ROOT: /ix/yufeihuang/jia/nlp/prompt/data
  SOURCE_DOMAINS: ()
  STL10_FOLD: -1
  SUBSAMPLE_CLASSES: all
  TARGET_DOMAINS: ()
  VAL_PERCENT: 0.1
INPUT:
  COLORJITTER_B: 0.4
  COLORJITTER_C: 0.4
  COLORJITTER_H: 0.1
  COLORJITTER_S: 0.4
  CROP_PADDING: 4
  CUTOUT_LEN: 16
  CUTOUT_N: 1
  GB_K: 21
  GB_P: 0.5
  GN_MEAN: 0.0
  GN_STD: 0.15
  INTERPOLATION: bicubic
  NO_TRANSFORM: False
  PIXEL_MEAN: [0.48145466, 0.4578275, 0.40821073]
  PIXEL_STD: [0.26862954, 0.26130258, 0.27577711]
  RANDAUGMENT_M: 10
  RANDAUGMENT_N: 2
  RGS_P: 0.2
  RRCROP_SCALE: (0.08, 1.0)
  SIZE: (224, 224)
  TRANSFORMS: ('random_resized_crop', 'random_flip', 'normalize')
MODEL:
  BACKBONE:
    NAME: RN50
    PRETRAINED: True
  HEAD:
    ACTIVATION: relu
    BN: True
    DROPOUT: 0.0
    HIDDEN_LAYERS: ()
    NAME: 
  INIT_WEIGHTS: 
OPTIM:
  ADAM_BETA1: 0.9
  ADAM_BETA2: 0.999
  BASE_LR_MULT: 0.1
  GAMMA: 0.1
  LR: 0.002
  LR_SCHEDULER: cosine
  MAX_EPOCH: 200
  MOMENTUM: 0.9
  NAME: sgd
  NEW_LAYERS: ()
  RMSPROP_ALPHA: 0.99
  SGD_DAMPNING: 0
  SGD_NESTEROV: False
  STAGED_LR: False
  STEPSIZE: (-1,)
  WARMUP_CONS_LR: 1e-05
  WARMUP_EPOCH: 1
  WARMUP_MIN_LR: 1e-05
  WARMUP_RECOUNT: True
  WARMUP_TYPE: constant
  WEIGHT_DECAY: 0.0005
OUTPUT_DIR: output/ZeroshotCLIP3/rn50/ucf101
RELEVANCE_REFINE: False
RESUME: 
SEED: -1
TEST:
  COMPUTE_CMAT: False
  EVALUATOR: Classification
  FINAL_MODEL: last_step
  NO_TEST: False
  PER_CLASS_RESULT: False
  SPLIT: test
TRAIN:
  CHECKPOINT_FREQ: 0
  COUNT_ITER: train_x
  PRINT_FREQ: 5
TRAINER:
  CDAC:
    CLASS_LR_MULTI: 10
    P_THRESH: 0.95
    RAMPUP_COEF: 30
    RAMPUP_ITRS: 1000
    STRONG_TRANSFORMS: ()
    TOPK_MATCH: 5
  COCOOP:
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  COOP:
    CLASS_TOKEN_POSITION: end
    CSC: False
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  CROSSGRAD:
    ALPHA_D: 0.5
    ALPHA_F: 0.5
    EPS_D: 1.0
    EPS_F: 1.0
  DAEL:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DAELDG:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DDAIG:
    ALPHA: 0.5
    CLAMP: False
    CLAMP_MAX: 1.0
    CLAMP_MIN: -1.0
    G_ARCH: 
    LMDA: 0.3
    WARMUP: 0
  DOMAINMIX:
    ALPHA: 1.0
    BETA: 1.0
    TYPE: crossdomain
  ENTMIN:
    LMDA: 0.001
  FIXMATCH:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 1.0
  M3SDA:
    LMDA: 0.5
    N_STEP_F: 4
  MCD:
    N_STEP_F: 4
  MEANTEACHER:
    EMA_ALPHA: 0.999
    RAMPUP: 5
    WEIGHT_U: 1.0
  MIXMATCH:
    MIXUP_BETA: 0.75
    RAMPUP: 20000
    TEMP: 2.0
    WEIGHT_U: 100.0
  MME:
    LMDA: 0.1
  NAME: ZeroshotCLIP3
  SE:
    CONF_THRE: 0.95
    EMA_ALPHA: 0.999
    RAMPUP: 300
USE_CUDA: True
VERBALIZER:
  DIR: /ihome/yufeihuang/jiy130/Prompt/CoOp/knowledgebase/ucf101
  SIZE: 1
VERBOSE: True
VERSION: 1
Collecting env info ...
** System info **
PyTorch version: 1.13.1
Is debug build: False
CUDA used to build PyTorch: 11.7
ROCM used to build PyTorch: N/A

OS: Red Hat Enterprise Linux (x86_64)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
Clang version: Could not collect
CMake version: Could not collect
Libc version: glibc-2.17

Python version: 3.8.16 (default, Jan 17 2023, 23:13:24)  [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-3.10.0-1160.71.1.el7.x86_64-x86_64-with-glibc2.17
Is CUDA available: True
CUDA runtime version: Could not collect
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: 
GPU 0: NVIDIA A100-PCIE-40GB
GPU 1: NVIDIA A100-PCIE-40GB
GPU 2: NVIDIA A100-PCIE-40GB
GPU 3: NVIDIA A100-PCIE-40GB

Nvidia driver version: 515.65.01
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

Versions of relevant libraries:
[pip3] numpy==1.23.5
[pip3] torch==1.13.1
[pip3] torchaudio==0.13.1
[pip3] torchvision==0.14.1
[conda] blas                      1.0                         mkl  
[conda] cudatoolkit               11.3.1               h2bc3f7f_2  
[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch
[conda] mkl                       2021.4.0           h06a4308_640  
[conda] mkl-service               2.4.0            py38h7f8727e_0  
[conda] mkl_fft                   1.3.1            py38hd3c417c_0  
[conda] mkl_random                1.2.2            py38h51133e4_0  
[conda] numpy                     1.23.5           py38h14f4228_0  
[conda] numpy-base                1.23.5           py38h31eccc5_0  
[conda] pytorch                   1.13.1          py3.8_cuda11.7_cudnn8.5.0_0    pytorch
[conda] pytorch-cuda              11.7                 h778d358_3    pytorch
[conda] pytorch-mutex             1.0                        cuda    pytorch
[conda] torchaudio                0.13.1               py38_cu117    pytorch
[conda] torchvision               0.14.1               py38_cu117    pytorch
        Pillow (9.4.0)

Loading trainer: ZeroshotCLIP3
Loading dataset: UCF101
Reading split from /ix/yufeihuang/jia/nlp/prompt/data/ucf101/split_zhou_UCF101.json
Building transform_train
+ random resized crop (size=(224, 224), scale=(0.08, 1.0))
+ random flip
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
---------  ------
Dataset    UCF101
# classes  101
# train_x  7,639
# val      1,898
# test     3,783
---------  ------
Loading CLIP (backbone: RN50)
Prompts: ['a photo of a person doing apply eye makeup.', 'a photo of a person doing apply lipstick.', 'a photo of a person doing archery.', 'a photo of a person doing gymnastics.', 'a photo of a person doing baby crawling.', 'a photo of a person doing limb.', 'a photo of a person doing balance beam.', 'a photo of a person doing band marching.', 'a photo of a person doing baseball pitch.', 'a photo of a person doing baseball.', 'a photo of a person doing basketball.', 'a photo of a person doing basketball court.', 'a photo of a person doing basketball dunk.', 'a photo of a person doing bench press.', 'a photo of a person doing weight training.', 'a photo of a person doing biking.', 'a photo of a person doing pedal.', 'a photo of a person doing billiards.', 'a photo of a person doing snooker.', 'a photo of a person doing blow dry hair.', 'a photo of a person doing blowing candles.', 'a photo of a person doing body weight squats.', 'a photo of a person doing bowling.', 'a photo of a person doing container.', 'a photo of a person doing boxing punching bag.', 'a photo of a person doing boxing speed bag.', 'a photo of a person doing breast stroke.', 'a photo of a person doing front crawl.', 'a photo of a person doing brushing teeth.', 'a photo of a person doing teeth.', 'a photo of a person doing clean and jerk.', 'a photo of a person doing barbell.', 'a photo of a person doing cliff diving.', 'a photo of a person doing cricket bowling.', 'a photo of a person doing throwing.', 'a photo of a person doing cricket shot.', 'a photo of a person doing cutting in kitchen.', 'a photo of a person doing diving.', 'a photo of a person doing swim.', 'a photo of a person doing drumming.', 'a photo of a person doing djembe.', 'a photo of a person doing fencing.', 'a photo of a person doing wall.', 'a photo of a person doing field hockey penalty.', 'a photo of a person doing floor gymnastics.', 'a photo of a person doing frisbee catch.', 'a photo of a person doing front crawl.', 'a photo of a person doing backstroke.', 'a photo of a person doing golf swing.', 'a photo of a person doing golf.', 'a photo of a person doing haircut.', 'a photo of a person doing hairstyle.', 'a photo of a person doing hammering.', 'a photo of a person doing mallet.', 'a photo of a person doing hammer throw.', 'a photo of a person doing scotland.', 'a photo of a person doing handstand pushups.', 'a photo of a person doing handstand walking.', 'a photo of a person doing head massage.', 'a photo of a person doing massage.', 'a photo of a person doing high jump.', 'a photo of a person doing fosbury flop.', 'a photo of a person doing horse race.', 'a photo of a person doing thoroughbred.', 'a photo of a person doing horse riding.', 'a photo of a person doing horse racing.', 'a photo of a person doing hula hoop.', 'a photo of a person doing wham-o.', 'a photo of a person doing ice dancing.', 'a photo of a person doing figure skating.', 'a photo of a person doing javelin throw.', 'a photo of a person doing spear.', 'a photo of a person doing juggling balls.', 'a photo of a person doing juggling club.', 'a photo of a person doing jumping jack.', 'a photo of a person doing jump rope.', 'a photo of a person doing rope.', 'a photo of a person doing kayaking.', 'a photo of a person doing canoe.', 'a photo of a person doing knitting.', 'a photo of a person doing fabric.', 'a photo of a person doing long jump.', 'a photo of a person doing wind-assisted.', 'a photo of a person doing lunges.', 'a photo of a person doing thrust.', 'a photo of a person doing military parade.', 'a photo of a person doing independence day.', 'a photo of a person doing mixing.', 'a photo of a person doing combine.', 'a photo of a person doing mopping floor.', 'a photo of a person doing nunchucks.', 'a photo of a person doing styrofoam.', 'a photo of a person doing parallel bars.', 'a photo of a person doing pizza tossing.', 'a photo of a person doing playing cello.', 'a photo of a person doing playing daf.', 'a photo of a person doing playing dhol.', 'a photo of a person doing playing flute.', 'a photo of a person doing playing guitar.', 'a photo of a person doing playing piano.', 'a photo of a person doing playing sitar.', 'a photo of a person doing playing tabla.', 'a photo of a person doing playing violin.', 'a photo of a person doing pole vault.', 'a photo of a person doing fiberglass.', 'a photo of a person doing pommel horse.', 'a photo of a person doing pull ups.', 'a photo of a person doing punch.', 'a photo of a person doing jab.', 'a photo of a person doing push ups.', 'a photo of a person doing pectoralis major muscle.', 'a photo of a person doing rafting.', 'a photo of a person doing float.', 'a photo of a person doing rock climbing indoor.', 'a photo of a person doing rope climbing.', 'a photo of a person doing france.', 'a photo of a person doing rowing.', 'a photo of a person doing quarrel.', 'a photo of a person doing salsa spin.', 'a photo of a person doing shaving beard.', 'a photo of a person doing shotput.', 'a photo of a person doing track and field.', 'a photo of a person doing skate boarding.', 'a photo of a person doing skatepark.', 'a photo of a person doing skiing.', 'a photo of a person doing sport.', 'a photo of a person doing skijet.', 'a photo of a person doing sky diving.', 'a photo of a person doing parachute.', 'a photo of a person doing soccer juggling.', 'a photo of a person doing soccer penalty.', 'a photo of a person doing still rings.', 'a photo of a person doing male.', 'a photo of a person doing sumo wrestling.', 'a photo of a person doing rikishi.', 'a photo of a person doing surfing.', 'a photo of a person doing breakers.', 'a photo of a person doing swing.', 'a photo of a person doing move.', 'a photo of a person doing table tennis shot.', 'a photo of a person doing tai chi.', 'a photo of a person doing taiji.', 'a photo of a person doing tennis swing.', 'a photo of a person doing throw discus.', 'a photo of a person doing trampoline jumping.', 'a photo of a person doing typing.', 'a photo of a person doing character.', 'a photo of a person doing uneven bars.', 'a photo of a person doing steel.', 'a photo of a person doing volleyball spiking.', 'a photo of a person doing volleyball.', 'a photo of a person doing walking with dog.', 'a photo of a person doing wall pushups.', 'a photo of a person doing writing on board.', 'a photo of a person doing yo yo.', 'a photo of a person doing axle.']
text feature size: torch.Size([156, 1024])
Loading evaluator: Classification
Note that load_model() is skipped as no pretrained model is given (ignore this if it's done on purpose)
Evaluate on the *test* set
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([100, 101])
process logits num of label words: 156
label_probs shape: torch.Size([83, 101])
=> result
* total: 3,783
* correct: 2,190
* accuracy: 57.9%
* error: 42.1%
* macro_f1: 54.6%
