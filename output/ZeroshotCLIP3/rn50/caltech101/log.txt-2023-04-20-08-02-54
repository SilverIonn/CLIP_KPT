***************
** Arguments **
***************
backbone: 
calibration: False
config_file: configs/trainers/CoOp/rn50.yaml
cutrate: None
dataset: caltech101
dataset_config_file: configs/datasets/caltech101.yaml
eval_only: True
head: 
load_epoch: None
model_dir: 
no_train: False
opts: []
output_dir: output/ZeroshotCLIP3/rn50/caltech101
relevance_refine: False
resume: 
root: /ix/yufeihuang/jia/nlp/prompt/data
seed: -1
source_domains: None
target_domains: None
trainer: ZeroshotCLIP3
transforms: None
vb_dir: /ihome/yufeihuang/jiy130/Prompt/CoOp/knowledgebase
vbsize: 5
verbalizer: True
************
** Config **
************
CALIBRATION: False
CALIBRATION_CUT: 0
DATALOADER:
  K_TRANSFORMS: 1
  NUM_WORKERS: 8
  RETURN_IMG0: False
  TEST:
    BATCH_SIZE: 100
    SAMPLER: SequentialSampler
  TRAIN_U:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAME_AS_X: True
    SAMPLER: RandomSampler
  TRAIN_X:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAMPLER: RandomSampler
DATASET:
  ALL_AS_UNLABELED: False
  CIFAR_C_LEVEL: 1
  CIFAR_C_TYPE: 
  NAME: Caltech101
  NUM_LABELED: -1
  NUM_SHOTS: -1
  ROOT: /ix/yufeihuang/jia/nlp/prompt/data
  SOURCE_DOMAINS: ()
  STL10_FOLD: -1
  SUBSAMPLE_CLASSES: all
  TARGET_DOMAINS: ()
  VAL_PERCENT: 0.1
INPUT:
  COLORJITTER_B: 0.4
  COLORJITTER_C: 0.4
  COLORJITTER_H: 0.1
  COLORJITTER_S: 0.4
  CROP_PADDING: 4
  CUTOUT_LEN: 16
  CUTOUT_N: 1
  GB_K: 21
  GB_P: 0.5
  GN_MEAN: 0.0
  GN_STD: 0.15
  INTERPOLATION: bicubic
  NO_TRANSFORM: False
  PIXEL_MEAN: [0.48145466, 0.4578275, 0.40821073]
  PIXEL_STD: [0.26862954, 0.26130258, 0.27577711]
  RANDAUGMENT_M: 10
  RANDAUGMENT_N: 2
  RGS_P: 0.2
  RRCROP_SCALE: (0.08, 1.0)
  SIZE: (224, 224)
  TRANSFORMS: ('random_resized_crop', 'random_flip', 'normalize')
MODEL:
  BACKBONE:
    NAME: RN50
    PRETRAINED: True
  HEAD:
    ACTIVATION: relu
    BN: True
    DROPOUT: 0.0
    HIDDEN_LAYERS: ()
    NAME: 
  INIT_WEIGHTS: 
OPTIM:
  ADAM_BETA1: 0.9
  ADAM_BETA2: 0.999
  BASE_LR_MULT: 0.1
  GAMMA: 0.1
  LR: 0.002
  LR_SCHEDULER: cosine
  MAX_EPOCH: 200
  MOMENTUM: 0.9
  NAME: sgd
  NEW_LAYERS: ()
  RMSPROP_ALPHA: 0.99
  SGD_DAMPNING: 0
  SGD_NESTEROV: False
  STAGED_LR: False
  STEPSIZE: (-1,)
  WARMUP_CONS_LR: 1e-05
  WARMUP_EPOCH: 1
  WARMUP_MIN_LR: 1e-05
  WARMUP_RECOUNT: True
  WARMUP_TYPE: constant
  WEIGHT_DECAY: 0.0005
OUTPUT_DIR: output/ZeroshotCLIP3/rn50/caltech101
RELEVANCE_REFINE: False
RESUME: 
SEED: -1
TEST:
  COMPUTE_CMAT: False
  EVALUATOR: Classification
  FINAL_MODEL: last_step
  NO_TEST: False
  PER_CLASS_RESULT: False
  SPLIT: test
TRAIN:
  CHECKPOINT_FREQ: 0
  COUNT_ITER: train_x
  PRINT_FREQ: 5
TRAINER:
  CDAC:
    CLASS_LR_MULTI: 10
    P_THRESH: 0.95
    RAMPUP_COEF: 30
    RAMPUP_ITRS: 1000
    STRONG_TRANSFORMS: ()
    TOPK_MATCH: 5
  COCOOP:
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  COOP:
    CLASS_TOKEN_POSITION: end
    CSC: False
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  CROSSGRAD:
    ALPHA_D: 0.5
    ALPHA_F: 0.5
    EPS_D: 1.0
    EPS_F: 1.0
  DAEL:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DAELDG:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DDAIG:
    ALPHA: 0.5
    CLAMP: False
    CLAMP_MAX: 1.0
    CLAMP_MIN: -1.0
    G_ARCH: 
    LMDA: 0.3
    WARMUP: 0
  DOMAINMIX:
    ALPHA: 1.0
    BETA: 1.0
    TYPE: crossdomain
  ENTMIN:
    LMDA: 0.001
  FIXMATCH:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 1.0
  M3SDA:
    LMDA: 0.5
    N_STEP_F: 4
  MCD:
    N_STEP_F: 4
  MEANTEACHER:
    EMA_ALPHA: 0.999
    RAMPUP: 5
    WEIGHT_U: 1.0
  MIXMATCH:
    MIXUP_BETA: 0.75
    RAMPUP: 20000
    TEMP: 2.0
    WEIGHT_U: 100.0
  MME:
    LMDA: 0.1
  NAME: ZeroshotCLIP3
  SE:
    CONF_THRE: 0.95
    EMA_ALPHA: 0.999
    RAMPUP: 300
USE_CUDA: True
VERBALIZER:
  DIR: /ihome/yufeihuang/jiy130/Prompt/CoOp/knowledgebase/caltech101
  SIZE: 5
VERBOSE: True
VERSION: 1
Collecting env info ...
** System info **
PyTorch version: 1.13.1
Is debug build: False
CUDA used to build PyTorch: 11.7
ROCM used to build PyTorch: N/A

OS: Red Hat Enterprise Linux (x86_64)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
Clang version: Could not collect
CMake version: Could not collect
Libc version: glibc-2.17

Python version: 3.8.16 (default, Jan 17 2023, 23:13:24)  [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-3.10.0-1160.71.1.el7.x86_64-x86_64-with-glibc2.17
Is CUDA available: True
CUDA runtime version: Could not collect
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: 
GPU 0: NVIDIA A100-PCIE-40GB
GPU 1: NVIDIA A100-PCIE-40GB
GPU 2: NVIDIA A100-PCIE-40GB
GPU 3: NVIDIA A100-PCIE-40GB

Nvidia driver version: 515.65.01
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

Versions of relevant libraries:
[pip3] numpy==1.23.5
[pip3] torch==1.13.1
[pip3] torchaudio==0.13.1
[pip3] torchvision==0.14.1
[conda] blas                      1.0                         mkl  
[conda] cudatoolkit               11.3.1               h2bc3f7f_2  
[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch
[conda] mkl                       2021.4.0           h06a4308_640  
[conda] mkl-service               2.4.0            py38h7f8727e_0  
[conda] mkl_fft                   1.3.1            py38hd3c417c_0  
[conda] mkl_random                1.2.2            py38h51133e4_0  
[conda] numpy                     1.23.5           py38h14f4228_0  
[conda] numpy-base                1.23.5           py38h31eccc5_0  
[conda] pytorch                   1.13.1          py3.8_cuda11.7_cudnn8.5.0_0    pytorch
[conda] pytorch-cuda              11.7                 h778d358_3    pytorch
[conda] pytorch-mutex             1.0                        cuda    pytorch
[conda] torchaudio                0.13.1               py38_cu117    pytorch
[conda] torchvision               0.14.1               py38_cu117    pytorch
        Pillow (9.4.0)

Loading trainer: ZeroshotCLIP3
Loading dataset: Caltech101
Reading split from /ix/yufeihuang/jia/nlp/prompt/data/caltech-101/split_zhou_Caltech101.json
Building transform_train
+ random resized crop (size=(224, 224), scale=(0.08, 1.0))
+ random flip
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
---------  ----------
Dataset    Caltech101
# classes  100
# train_x  4,128
# val      1,649
# test     2,465
---------  ----------
Loading CLIP (backbone: RN50)
Prompts: ['a photo of a face.', 'a photo of a front.', 'a photo of a confront.', 'a photo of a cheek.', 'a photo of a facial expression.', 'a photo of a leopard.', 'a photo of a jaguar.', 'a photo of a panthera.', 'a photo of a panther.', 'a photo of a motorbike.', 'a photo of a motorcycle.', 'a photo of a harley-davidson.', 'a photo of a moped.', 'a photo of a bike.', 'a photo of a accordion.', 'a photo of a piano.', 'a photo of a concertina.', 'a photo of a harmonica.', 'a photo of a piano accordion.', 'a photo of a airplane.', 'a photo of a plane.', 'a photo of a airliner.', 'a photo of a propeller.', 'a photo of a monoplane.', 'a photo of a fuselage.', 'a photo of a anchor.', 'a photo of a anchorman.', 'a photo of a fasten.', 'a photo of a seabed.', 'a photo of a cable.', 'a photo of a watercraft.', 'a photo of a ant.', 'a photo of a wasp.', 'a photo of a hymenoptera.', 'a photo of a bee.', 'a photo of a army ant.', 'a photo of a barrel.', 'a photo of a gallon.', 'a photo of a hogshead.', 'a photo of a beer.', 'a photo of a keg.', 'a photo of a cask.', 'a photo of a bass.', 'a photo of a freshwater bass.', 'a photo of a sea bass.', 'a photo of a basso.', 'a photo of a contrabass.', 'a photo of a bass guitar.', 'a photo of a beaver.', 'a photo of a capybara.', 'a photo of a castor.', 'a photo of a otter.', 'a photo of a binocular.', 'a photo of a eyepiece.', 'a photo of a ocular.', 'a photo of a telescope.', 'a photo of a retina.', 'a photo of a goggle.', 'a photo of a bonsai.', 'a photo of a japan.', 'a photo of a penjing.', 'a photo of a pine.', 'a photo of a brain.', 'a photo of a cerebrum.', 'a photo of a mind.', 'a photo of a cerebral cortex.', 'a photo of a neuron.', 'a photo of a brontosaurus.', 'a photo of a apatosaurus.', 'a photo of a sauropod.', 'a photo of a dinosaur.', 'a photo of a quadruped.', 'a photo of a buddha.', 'a photo of a buddhism.', 'a photo of a bodhisattva.', 'a photo of a gautama buddha.', 'a photo of a gautama.', 'a photo of a mahayana.', 'a photo of a butterfly.', 'a photo of a caterpillar.', 'a photo of a larva.', 'a photo of a pupa.', 'a photo of a camera.', 'a photo of a video.', 'a photo of a photograph.', 'a photo of a image.', 'a photo of a camera lens.', 'a photo of a shutter.', 'a photo of a cannon.', 'a photo of a gun.', 'a photo of a artillery.', 'a photo of a gunpowder.', 'a photo of a projectile.', 'a photo of a howitzer.', 'a photo of a car side.', 'a photo of a ceiling fan.', 'a photo of a india.', 'a photo of a united states.', 'a photo of a ceiling.', 'a photo of a rotation.', 'a photo of a convection.', 'a photo of a cellphone.', 'a photo of a smartphone.', 'a photo of a telephone.', 'a photo of a iphone.', 'a photo of a telephony.', 'a photo of a gsm.', 'a photo of a chair.', 'a photo of a seat.', 'a photo of a chairwoman.', 'a photo of a chairperson.', 'a photo of a chairman.', 'a photo of a bench.', 'a photo of a chandelier.', 'a photo of a pendant.', 'a photo of a skylight.', 'a photo of a light fixture.', 'a photo of a cougar body.', 'a photo of a cougar face.', 'a photo of a crab.', 'a photo of a king crab.', 'a photo of a dungeness crab.', 'a photo of a crayfish.', 'a photo of a rock lobster.', 'a photo of a crocodile.', 'a photo of a reptile.', 'a photo of a nile crocodile.', 'a photo of a alligator.', 'a photo of a crocodylus.', 'a photo of a saltwater crocodile.', 'a photo of a crocodile head.', 'a photo of a cup.', 'a photo of a trophy.', 'a photo of a container.', 'a photo of a chalice.', 'a photo of a teacup.', 'a photo of a cupful.', 'a photo of a dalmatian.', 'a photo of a dalmatia.', 'a photo of a carriage dog.', 'a photo of a coach dog.', 'a photo of a pomeranian.', 'a photo of a samoyed.', 'a photo of a dollar bill.', 'a photo of a george washington.', 'a photo of a currency.', 'a photo of a money.', 'a photo of a gold.', 'a photo of a oil.', 'a photo of a dolphin.', 'a photo of a killer whale.', 'a photo of a porpoise.', 'a photo of a bottlenose dolphin.', 'a photo of a whale.', 'a photo of a river dolphin.', 'a photo of a dragonfly.', 'a photo of a mosquito.', 'a photo of a compound eye.', 'a photo of a electric guitar.', 'a photo of a gibson les paul.', 'a photo of a bridge.', 'a photo of a rickenbacker.', 'a photo of a les paul.', 'a photo of a elephant.', 'a photo of a african elephant.', 'a photo of a elephantidae.', 'a photo of a gomphothere.', 'a photo of a emu.', 'a photo of a flightless bird.', 'a photo of a ratite.', 'a photo of a cassowary.', 'a photo of a ostrich.', 'a photo of a dromaius.', 'a photo of a euphonium.', 'a photo of a tuba.', 'a photo of a trumpet.', 'a photo of a flugelhorn.', 'a photo of a brass instrument.', 'a photo of a ewer.', 'a photo of a handle.', 'a photo of a pitcher.', 'a photo of a jug.', 'a photo of a carnelian.', 'a photo of a ferry.', 'a photo of a boat.', 'a photo of a navigation.', 'a photo of a transport.', 'a photo of a ship.', 'a photo of a ferryboat.', 'a photo of a flamingo.', 'a photo of a family.', 'a photo of a wading bird.', 'a photo of a flamingo head.', 'a photo of a garfield.', 'a photo of a comic strip.', 'a photo of a odie.', 'a photo of a james garfield.', 'a photo of a nickelodeon.', 'a photo of a viacomcbs.', 'a photo of a gerenuk.', 'a photo of a antelope.', 'a photo of a coat.', 'a photo of a horn.', 'a photo of a somali language.', 'a photo of a gramophone.', 'a photo of a phonograph.', 'a photo of a victrola.', 'a photo of a cassette.', 'a photo of a record player.', 'a photo of a acoustic gramophone.', 'a photo of a grand piano.', 'a photo of a electric piano.', 'a photo of a bösendorfer.', 'a photo of a pipe organ.', 'a photo of a sound board.', 'a photo of a hawksbill.', 'a photo of a sea turtle.', 'a photo of a turtle.', 'a photo of a coral reef.', 'a photo of a caribbean.', 'a photo of a hawksbill turtle.', 'a photo of a headphone.', 'a photo of a earphone.', 'a photo of a amplifier.', 'a photo of a headset.', 'a photo of a bluetooth.', 'a photo of a microphone.', 'a photo of a hedgehog.', 'a photo of a snail.', 'a photo of a spine.', 'a photo of a helicopter.', 'a photo of a flight.', 'a photo of a aircraft.', 'a photo of a chopper.', 'a photo of a lift.', 'a photo of a ibis.', 'a photo of a heron.', 'a photo of a latin.', 'a photo of a threskiornithidae.', 'a photo of a inline skate.', 'a photo of a aggressive inline skating.', 'a photo of a inline speed skating.', 'a photo of a rollerblade.', 'a photo of a roller skates.', 'a photo of a trademark.', 'a photo of a joshua tree.', 'a photo of a yucca.', 'a photo of a california.', 'a photo of a arizona.', 'a photo of a utah.', 'a photo of a kangaroo.', 'a photo of a marsupial.', 'a photo of a wallaby.', 'a photo of a macropodidae.', 'a photo of a red kangaroo.', 'a photo of a eastern grey kangaroo.', 'a photo of a ketch.', 'a photo of a mainsail.', 'a photo of a barque.', 'a photo of a rowboat.', 'a photo of a lamp.', 'a photo of a lantern.', 'a photo of a light.', 'a photo of a flashlight.', 'a photo of a bulb.', 'a photo of a laptop.', 'a photo of a touchpad.', 'a photo of a computer.', 'a photo of a motherboard.', 'a photo of a usb.', 'a photo of a ibook.', 'a photo of a llama.', 'a photo of a alpaca.', 'a photo of a guanaco.', 'a photo of a vicuña.', 'a photo of a camelid.', 'a photo of a south america.', 'a photo of a lobster.', 'a photo of a seafood.', 'a photo of a lotus.', 'a photo of a blossom.', 'a photo of a lily.', 'a photo of a water lily.', 'a photo of a genus lotus.', 'a photo of a mandolin.', 'a photo of a banjo.', 'a photo of a lute.', 'a photo of a mandola.', 'a photo of a ukulele.', 'a photo of a mayfly.', 'a photo of a midge.', 'a photo of a menorah.', 'a photo of a candelabrum.', 'a photo of a judaism.', 'a photo of a hanukkah.', 'a photo of a metronome.', 'a photo of a pendulum.', 'a photo of a rubato.', 'a photo of a clockwork.', 'a photo of a pulse.', 'a photo of a tempo.', 'a photo of a minaret.', 'a photo of a tower.', 'a photo of a mosque.', 'a photo of a muezzin.', 'a photo of a skyscraper.', 'a photo of a indonesia.', 'a photo of a nautilus.', 'a photo of a chambered nautilus.', 'a photo of a radula.', 'a photo of a coleoidea.', 'a photo of a octopus.', 'a photo of a mollusc.', 'a photo of a devilfish.', 'a photo of a okapi.', 'a photo of a giraffe.', 'a photo of a giraffidae.', 'a photo of a fungus.', 'a photo of a palaeotragus.', 'a photo of a pagoda.', 'a photo of a stupa.', 'a photo of a temple.', 'a photo of a east asia.', 'a photo of a nepal.', 'a photo of a buddhist.', 'a photo of a panda.', 'a photo of a red panda.', 'a photo of a sichuan.', 'a photo of a bear.', 'a photo of a gorilla.', 'a photo of a pigeon.', 'a photo of a dodo.', 'a photo of a rock dove.', 'a photo of a domestic pigeon.', 'a photo of a passenger pigeon.', 'a photo of a pizza.', 'a photo of a cheese.', 'a photo of a italy.', 'a photo of a pepperoni.', 'a photo of a tomato.', 'a photo of a pizza hut.', 'a photo of a platypus.', 'a photo of a echidna.', 'a photo of a monotreme.', 'a photo of a duckbill.', 'a photo of a duck.', 'a photo of a pyramid.', 'a photo of a great pyramid of giza.', 'a photo of a khufu.', 'a photo of a egypt.', 'a photo of a seven wonders of the ancient world.', 'a photo of a tomb.', 'a photo of a revolver.', 'a photo of a pistol.', 'a photo of a handgun.', 'a photo of a shotgun.', 'a photo of a firearm.', 'a photo of a rifle.', 'a photo of a rhino.', 'a photo of a rhinoceros.', 'a photo of a indian rhinoceros.', 'a photo of a africa.', 'a photo of a keratin.', 'a photo of a white rhinoceros.', 'a photo of a rooster.', 'a photo of a chicken.', 'a photo of a cockerel.', 'a photo of a cock.', 'a photo of a saxophone.', 'a photo of a clarinet.', 'a photo of a oboe.', 'a photo of a jazz.', 'a photo of a sax.', 'a photo of a schooner.', 'a photo of a foremast.', 'a photo of a mast.', 'a photo of a yacht.', 'a photo of a scissors.', 'a photo of a cut.', 'a photo of a switchblade.', 'a photo of a blade.', 'a photo of a knife.', 'a photo of a machete.', 'a photo of a scorpion.', 'a photo of a arachnid.', 'a photo of a venom.', 'a photo of a scorpio.', 'a photo of a sea horse.', 'a photo of a horse.', 'a photo of a pipefish.', 'a photo of a snoopy.', 'a photo of a beagle.', 'a photo of a nosy.', 'a photo of a prying.', 'a photo of a nosey.', 'a photo of a charlie brown.', 'a photo of a soccer ball.', 'a photo of a fifa.', 'a photo of a ball.', 'a photo of a england.', 'a photo of a international football association board.', 'a photo of a charles goodyear.', 'a photo of a stapler.', 'a photo of a basic.', 'a photo of a essential.', 'a photo of a raw material.', 'a photo of a paper fastener.', 'a photo of a commodity.', 'a photo of a starfish.', 'a photo of a coral.', 'a photo of a echinoderm.', 'a photo of a class.', 'a photo of a sea star.', 'a photo of a bivalve.', 'a photo of a stegosaurus.', 'a photo of a allosaurus.', 'a photo of a ceratosaurus.', 'a photo of a diplodocus.', 'a photo of a brachiosaurus.', 'a photo of a stop sign.', 'a photo of a vienna convention on road signs and signals.', 'a photo of a retroreflector.', 'a photo of a intersection.', 'a photo of a octagon.', 'a photo of a si.', 'a photo of a strawberry.', 'a photo of a fruit.', 'a photo of a berry.', 'a photo of a achene.', 'a photo of a peach.', 'a photo of a raspberry.', 'a photo of a sunflower.', 'a photo of a asteraceae.', 'a photo of a helianthus.', 'a photo of a pseudanthium.', 'a photo of a poppy.', 'a photo of a tick.', 'a photo of a ticktock.', 'a photo of a sound.', 'a photo of a mark.', 'a photo of a trilobite.', 'a photo of a arthropod.', 'a photo of a cambrian.', 'a photo of a devonian.', 'a photo of a ordovician.', 'a photo of a umbrella.', 'a photo of a canopy.', 'a photo of a shade.', 'a photo of a union.', 'a photo of a defense.', 'a photo of a comprehensive.', 'a photo of a watch.', 'a photo of a see.', 'a photo of a clock.', 'a photo of a pocket watch.', 'a photo of a ascertain.', 'a photo of a water lilly.', 'a photo of a nymphaeaceae.', 'a photo of a cultivars.', 'a photo of a ornamental plant.', 'a photo of a wheelchair.', 'a photo of a disability.', 'a photo of a walking.', 'a photo of a treadmill.', 'a photo of a wild cat.', 'a photo of a felinae.', 'a photo of a machairodontinae.', 'a photo of a pantherinae.', 'a photo of a domestic cat.', 'a photo of a windsor chair.', 'a photo of a pole lathe.', 'a photo of a spindle.', 'a photo of a steam bending.', 'a photo of a wood.', 'a photo of a wrench.', 'a photo of a twist.', 'a photo of a spanner.', 'a photo of a pull.', 'a photo of a sprain.', 'a photo of a monkey wrench.', 'a photo of a yin yang.', 'a photo of a taiji.', 'a photo of a taoism.', 'a photo of a i ching.', 'a photo of a wuji.']
text feature size: torch.Size([485, 1024])
Loading evaluator: Classification
Note that load_model() is skipped as no pretrained model is given (ignore this if it's done on purpose)
Evaluate on the *test* set
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([100, 100])
process logits num of label words: 485
label_probs shape: torch.Size([65, 100])
=> result
* total: 2,465
* correct: 1,928
* accuracy: 78.2%
* error: 21.8%
* macro_f1: 74.4%
