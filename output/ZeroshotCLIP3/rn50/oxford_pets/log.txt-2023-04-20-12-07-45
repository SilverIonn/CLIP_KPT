***************
** Arguments **
***************
backbone: 
calibration: True
config_file: configs/trainers/CoOp/rn50.yaml
cutrate: 0.8
dataset: oxford_pets
dataset_config_file: configs/datasets/oxford_pets.yaml
eval_only: True
head: 
load_epoch: None
model_dir: 
no_train: False
opts: []
output_dir: output/ZeroshotCLIP3/rn50/oxford_pets
relevance_refine: False
resume: 
root: /ix/yufeihuang/jia/nlp/prompt/data
seed: -1
source_domains: None
target_domains: None
trainer: ZeroshotCLIP3
transforms: None
vb_dir: /ihome/yufeihuang/jiy130/Prompt/CoOp/knowledgebase
vbsize: 40
verbalizer: True
************
** Config **
************
CALIBRATION: True
CALIBRATION_CUT: 0.8
DATALOADER:
  K_TRANSFORMS: 1
  NUM_WORKERS: 8
  RETURN_IMG0: False
  TEST:
    BATCH_SIZE: 100
    SAMPLER: SequentialSampler
  TRAIN_U:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAME_AS_X: True
    SAMPLER: RandomSampler
  TRAIN_X:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAMPLER: RandomSampler
DATASET:
  ALL_AS_UNLABELED: False
  CIFAR_C_LEVEL: 1
  CIFAR_C_TYPE: 
  NAME: OxfordPets
  NUM_LABELED: -1
  NUM_SHOTS: -1
  ROOT: /ix/yufeihuang/jia/nlp/prompt/data
  SOURCE_DOMAINS: ()
  STL10_FOLD: -1
  SUBSAMPLE_CLASSES: all
  TARGET_DOMAINS: ()
  VAL_PERCENT: 0.1
INPUT:
  COLORJITTER_B: 0.4
  COLORJITTER_C: 0.4
  COLORJITTER_H: 0.1
  COLORJITTER_S: 0.4
  CROP_PADDING: 4
  CUTOUT_LEN: 16
  CUTOUT_N: 1
  GB_K: 21
  GB_P: 0.5
  GN_MEAN: 0.0
  GN_STD: 0.15
  INTERPOLATION: bicubic
  NO_TRANSFORM: False
  PIXEL_MEAN: [0.48145466, 0.4578275, 0.40821073]
  PIXEL_STD: [0.26862954, 0.26130258, 0.27577711]
  RANDAUGMENT_M: 10
  RANDAUGMENT_N: 2
  RGS_P: 0.2
  RRCROP_SCALE: (0.08, 1.0)
  SIZE: (224, 224)
  TRANSFORMS: ('random_resized_crop', 'random_flip', 'normalize')
MODEL:
  BACKBONE:
    NAME: RN50
    PRETRAINED: True
  HEAD:
    ACTIVATION: relu
    BN: True
    DROPOUT: 0.0
    HIDDEN_LAYERS: ()
    NAME: 
  INIT_WEIGHTS: 
OPTIM:
  ADAM_BETA1: 0.9
  ADAM_BETA2: 0.999
  BASE_LR_MULT: 0.1
  GAMMA: 0.1
  LR: 0.002
  LR_SCHEDULER: cosine
  MAX_EPOCH: 200
  MOMENTUM: 0.9
  NAME: sgd
  NEW_LAYERS: ()
  RMSPROP_ALPHA: 0.99
  SGD_DAMPNING: 0
  SGD_NESTEROV: False
  STAGED_LR: False
  STEPSIZE: (-1,)
  WARMUP_CONS_LR: 1e-05
  WARMUP_EPOCH: 1
  WARMUP_MIN_LR: 1e-05
  WARMUP_RECOUNT: True
  WARMUP_TYPE: constant
  WEIGHT_DECAY: 0.0005
OUTPUT_DIR: output/ZeroshotCLIP3/rn50/oxford_pets
RELEVANCE_REFINE: False
RESUME: 
SEED: -1
TEST:
  COMPUTE_CMAT: False
  EVALUATOR: Classification
  FINAL_MODEL: last_step
  NO_TEST: False
  PER_CLASS_RESULT: False
  SPLIT: test
TRAIN:
  CHECKPOINT_FREQ: 0
  COUNT_ITER: train_x
  PRINT_FREQ: 5
TRAINER:
  CDAC:
    CLASS_LR_MULTI: 10
    P_THRESH: 0.95
    RAMPUP_COEF: 30
    RAMPUP_ITRS: 1000
    STRONG_TRANSFORMS: ()
    TOPK_MATCH: 5
  COCOOP:
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  COOP:
    CLASS_TOKEN_POSITION: end
    CSC: False
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  CROSSGRAD:
    ALPHA_D: 0.5
    ALPHA_F: 0.5
    EPS_D: 1.0
    EPS_F: 1.0
  DAEL:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DAELDG:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DDAIG:
    ALPHA: 0.5
    CLAMP: False
    CLAMP_MAX: 1.0
    CLAMP_MIN: -1.0
    G_ARCH: 
    LMDA: 0.3
    WARMUP: 0
  DOMAINMIX:
    ALPHA: 1.0
    BETA: 1.0
    TYPE: crossdomain
  ENTMIN:
    LMDA: 0.001
  FIXMATCH:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 1.0
  M3SDA:
    LMDA: 0.5
    N_STEP_F: 4
  MCD:
    N_STEP_F: 4
  MEANTEACHER:
    EMA_ALPHA: 0.999
    RAMPUP: 5
    WEIGHT_U: 1.0
  MIXMATCH:
    MIXUP_BETA: 0.75
    RAMPUP: 20000
    TEMP: 2.0
    WEIGHT_U: 100.0
  MME:
    LMDA: 0.1
  NAME: ZeroshotCLIP3
  SE:
    CONF_THRE: 0.95
    EMA_ALPHA: 0.999
    RAMPUP: 300
USE_CUDA: True
VERBALIZER:
  DIR: /ihome/yufeihuang/jiy130/Prompt/CoOp/knowledgebase/oxford_pets
  SIZE: 40
VERBOSE: True
VERSION: 1
Collecting env info ...
** System info **
PyTorch version: 1.13.1
Is debug build: False
CUDA used to build PyTorch: 11.7
ROCM used to build PyTorch: N/A

OS: Red Hat Enterprise Linux (x86_64)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
Clang version: Could not collect
CMake version: Could not collect
Libc version: glibc-2.17

Python version: 3.8.16 (default, Jan 17 2023, 23:13:24)  [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-3.10.0-1160.71.1.el7.x86_64-x86_64-with-glibc2.17
Is CUDA available: True
CUDA runtime version: Could not collect
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: 
GPU 0: NVIDIA A100-PCIE-40GB
GPU 1: NVIDIA A100-PCIE-40GB
GPU 2: NVIDIA A100-PCIE-40GB
GPU 3: NVIDIA A100-PCIE-40GB

Nvidia driver version: 515.65.01
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

Versions of relevant libraries:
[pip3] numpy==1.23.5
[pip3] torch==1.13.1
[pip3] torchaudio==0.13.1
[pip3] torchvision==0.14.1
[conda] blas                      1.0                         mkl  
[conda] cudatoolkit               11.3.1               h2bc3f7f_2  
[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch
[conda] mkl                       2021.4.0           h06a4308_640  
[conda] mkl-service               2.4.0            py38h7f8727e_0  
[conda] mkl_fft                   1.3.1            py38hd3c417c_0  
[conda] mkl_random                1.2.2            py38h51133e4_0  
[conda] numpy                     1.23.5           py38h14f4228_0  
[conda] numpy-base                1.23.5           py38h31eccc5_0  
[conda] pytorch                   1.13.1          py3.8_cuda11.7_cudnn8.5.0_0    pytorch
[conda] pytorch-cuda              11.7                 h778d358_3    pytorch
[conda] pytorch-mutex             1.0                        cuda    pytorch
[conda] torchaudio                0.13.1               py38_cu117    pytorch
[conda] torchvision               0.14.1               py38_cu117    pytorch
        Pillow (9.4.0)

Loading trainer: ZeroshotCLIP3
Loading dataset: OxfordPets
Reading split from /ix/yufeihuang/jia/nlp/prompt/data/oxford_pets/split_zhou_OxfordPets.json
Building transform_train
+ random resized crop (size=(224, 224), scale=(0.08, 1.0))
+ random flip
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
---------  ----------
Dataset    OxfordPets
# classes  37
# train_x  2,944
# val      736
# test     3,669
---------  ----------
Loading CLIP (backbone: RN50)
Selected examples (mixed) [2427, 291, 80, 1687, 2163, 1115, 2620, 588, 181, 738, 1871, 707, 2278, 2484, 1369, 594, 1759, 2839, 1813, 2641, 1881, 2513, 321, 2188, 1724, 138, 191, 2886, 366, 662, 1810, 1727, 2349, 30, 1920, 2789, 1524, 1691, 699, 239, 883, 656, 641, 460, 1829, 293, 1787, 1835, 2131, 2818, 769, 189, 1225, 85, 2826, 238, 915, 2751, 90, 27, 671, 1187, 749, 1037, 763, 661, 406, 972, 234, 1610, 448, 1935, 2608, 628, 2167, 1504, 2581, 2529, 2328, 1056, 1696, 852, 539, 1462, 1368, 2681, 65, 726, 108, 887, 1548, 2888, 2488, 812, 1312, 1564, 2662, 446, 223, 2499, 1509, 1972, 911, 369, 1656, 1220, 672, 639, 2606, 2201, 2062, 66, 2907, 777, 2830, 1794, 2049, 1138, 1569, 1332, 534, 272, 2493, 1604, 2842, 79, 2550, 2860, 2076, 2040, 1474, 2002, 679, 1353, 2665, 1125, 1255, 259, 2322, 2602, 2136, 78, 1865, 879, 2735, 2242, 2124, 958, 2709, 1685, 1196, 319, 1962, 703, 837, 806, 2440, 1204, 2541, 483, 1728, 2082, 1171, 976, 1710, 2847, 1832, 148, 26, 2296, 665, 1700, 2812, 1026, 1477, 2773, 2318, 271, 2113, 2257, 968, 1584, 2283, 207, 1632, 20, 416, 814, 1644, 678, 1256, 2853, 2470, 1518, 931, 1780, 2103, 1739, 87, 378]
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Load support dataloader successfully! size: 200
num of org label words: 671
cali text features shape: torch.Size([671, 1024])
the calibration logits is tensor([[13.5000, 10.5000, 21.5156,  ..., 18.2031, 23.2188, 15.4141],
        [16.8594, 14.6953, 20.6094,  ..., 17.8125, 21.2031, 17.8594],
        [ 6.9805,  3.9141, 18.7812,  ..., 15.6328, 19.2188, 14.8984],
        ...,
        [18.6562, 15.8984, 21.7344,  ..., 17.9688, 20.7500, 17.6875],
        [ 9.5859,  6.8086, 19.0781,  ..., 16.0312, 19.9844, 15.0156],
        [17.3594, 15.5000, 21.3906,  ..., 18.8594, 20.2500, 19.2344]],
       device='cuda:0', dtype=torch.float16, grad_fn=<MmBackward0>)
cc_logits shape: torch.Size([200, 671])
Phase 1 [18, 29, 1, 30, 8, 37, 32, 38, 41, 14, 4, 7, 23, 24, 1, 1, 5, 13, 2, 30, 1, 12, 41, 23, 2, 11, 33, 15, 1, 4, 33, 20, 16, 27, 29, 14, 31]

register_calibrate_logits starting shape: torch.Size([671])
logits shape -1 :671
rm_calibrate_ids: {0, 1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 67, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 382, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 419, 420, 422, 423, 424, 425, 426, 427, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 457, 459, 460, 461, 463, 464, 466, 468, 469, 472, 473, 474, 475, 476, 477, 480, 481, 483, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 539, 540, 542, 544, 545, 547, 548, 549, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 578, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 640, 641, 642, 643, 644, 645, 649, 653, 655, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670}, shape 536
Phase 2 [4, 5, 1, 11, 1, 4, 10, 5, 9, 2, 2, 1, 6, 5, 1, 1, 1, 5, 1, 5, 1, 3, 11, 10, 1, 3, 12, 6, 1, 1, 5, 9, 3, 8, 3, 3, 11]

num of label words after cc: 171
cali_logits shape: torch.Size([171])
Prompts: ['a photo of a abyssinian, a type of pet.', 'a photo of a agawam, a type of pet.', 'a photo of a maranatha, a type of pet.', 'a photo of a baptist, a type of pet.', 'a photo of a american bulldog, a type of pet.', 'a photo of a catch dog, a type of pet.', 'a photo of a conformation shows, a type of pet.', 'a photo of a heterochromia iridum, a type of pet.', 'a photo of a guard dog, a type of pet.', 'a photo of a american pit bull terrier, a type of pet.', 'a photo of a basset hound, a type of pet.', 'a photo of a tracking, a type of pet.', 'a photo of a olfactory, a type of pet.', 'a photo of a flews, a type of pet.', 'a photo of a osteochondrodysplasia, a type of pet.', 'a photo of a achondroplasia, a type of pet.', 'a photo of a epilepsy, a type of pet.', 'a photo of a laconia, a type of pet.', 'a photo of a time, a type of pet.', 'a photo of a linebreeding, a type of pet.', 'a photo of a droopy, a type of pet.', 'a photo of a beagle, a type of pet.', 'a photo of a bengal, a type of pet.', 'a photo of a goa, a type of pet.', 'a photo of a magadha, a type of pet.', 'a photo of a nadu, a type of pet.', 'a photo of a birman, a type of pet.', 'a photo of a burma, a type of pet.', 'a photo of a interbreed, a type of pet.', 'a photo of a breeder, a type of pet.', 'a photo of a pedigree, a type of pet.', 'a photo of a racial, a type of pet.', 'a photo of a purebred, a type of pet.', 'a photo of a rex, a type of pet.', 'a photo of a generate, a type of pet.', 'a photo of a gen, a type of pet.', 'a photo of a bombay, a type of pet.', 'a photo of a pune, a type of pet.', 'a photo of a hindi, a type of pet.', 'a photo of a mahim, a type of pet.', 'a photo of a sion, a type of pet.', 'a photo of a boxer, a type of pet.', 'a photo of a packer, a type of pet.', 'a photo of a knockout, a type of pet.', 'a photo of a pugilism, a type of pet.', 'a photo of a battler, a type of pet.', 'a photo of a sport, a type of pet.', 'a photo of a palooka, a type of pet.', 'a photo of a jack johnson, a type of pet.', 'a photo of a light welterweight, a type of pet.', 'a photo of a british shorthair, a type of pet.', 'a photo of a de facto, a type of pet.', 'a photo of a chihuahua, a type of pet.', 'a photo of a doggie, a type of pet.', 'a photo of a egyptian mau, a type of pet.', 'a photo of a english cocker spaniel, a type of pet.', 'a photo of a h.s. lloyd, a type of pet.', 'a photo of a arthritis, a type of pet.', 'a photo of a rebecca, a type of pet.', 'a photo of a lupo, a type of pet.', 'a photo of a rage syndrome, a type of pet.', 'a photo of a english setter, a type of pet.', 'a photo of a deaf animal, a type of pet.', 'a photo of a nomenclature, a type of pet.', 'a photo of a united kingdom accreditation service, a type of pet.', 'a photo of a pointing breed, a type of pet.', 'a photo of a german shorthaired, a type of pet.', 'a photo of a great pyrenees, a type of pet.', 'a photo of a havanese, a type of pet.', 'a photo of a japanese chin, a type of pet.', 'a photo of a strabismus, a type of pet.', 'a photo of a lap dog, a type of pet.', 'a photo of a hypoglycemia, a type of pet.', 'a photo of a frances c. fairman, a type of pet.', 'a photo of a keeshond, a type of pet.', 'a photo of a leonberger, a type of pet.', 'a photo of a stuttgart, a type of pet.', 'a photo of a barry, a type of pet.', 'a photo of a lifesaving, a type of pet.', 'a photo of a prince of wales, a type of pet.', 'a photo of a maine coon, a type of pet.', 'a photo of a miniature pinscher, a type of pet.', 'a photo of a cropping, a type of pet.', 'a photo of a companion group, a type of pet.', 'a photo of a newfoundland, a type of pet.', 'a photo of a nova scotia, a type of pet.', 'a photo of a prince edward island, a type of pet.', 'a photo of a quebec, a type of pet.', "a photo of a st. john's, a type of pet.", 'a photo of a maine, a type of pet.', 'a photo of a french language, a type of pet.', 'a photo of a avalon peninsula, a type of pet.', 'a photo of a joão fernandes lavrador, a type of pet.', 'a photo of a cayuga, a type of pet.', 'a photo of a port au choix, a type of pet.', 'a photo of a persian, a type of pet.', 'a photo of a iranian, a type of pet.', 'a photo of a farsi, a type of pet.', 'a photo of a irani, a type of pet.', 'a photo of a iran, a type of pet.', 'a photo of a arabic, a type of pet.', 'a photo of a nowruz, a type of pet.', 'a photo of a noruz, a type of pet.', 'a photo of a nowrooz, a type of pet.', 'a photo of a arabs, a type of pet.', 'a photo of a pomeranian, a type of pet.', 'a photo of a pug, a type of pet.', 'a photo of a spain, a type of pet.', 'a photo of a italy, a type of pet.', 'a photo of a ragdoll, a type of pet.', 'a photo of a point, a type of pet.', 'a photo of a relax, a type of pet.', 'a photo of a dog-like cats, a type of pet.', 'a photo of a bodiless, a type of pet.', 'a photo of a bodily, a type of pet.', 'a photo of a corporeal, a type of pet.', 'a photo of a rest, a type of pet.', 'a photo of a embody, a type of pet.', 'a photo of a relaxant, a type of pet.', 'a photo of a unbend, a type of pet.', 'a photo of a hip, a type of pet.', 'a photo of a russian blue, a type of pet.', 'a photo of a arkhangelsk, a type of pet.', 'a photo of a scandinavia, a type of pet.', 'a photo of a hybrid, a type of pet.', 'a photo of a russian, a type of pet.', 'a photo of a havana brown, a type of pet.', 'a photo of a saint bernard, a type of pet.', 'a photo of a samoyed, a type of pet.', 'a photo of a scottish terrier, a type of pet.', 'a photo of a fala, a type of pet.', 'a photo of a domesticated, a type of pet.', 'a photo of a scottish gaelic language, a type of pet.', 'a photo of a president of the united states, a type of pet.', 'a photo of a shiba inu, a type of pet.', 'a photo of a japan, a type of pet.', 'a photo of a hokkaido, a type of pet.', 'a photo of a dogū, a type of pet.', 'a photo of a chūbu region, a type of pet.', 'a photo of a canine distemper, a type of pet.', 'a photo of a mino province, a type of pet.', 'a photo of a nihon ken hozonkai, a type of pet.', 'a photo of a pusuke, a type of pet.', 'a photo of a siamese, a type of pet.', 'a photo of a tai, a type of pet.', 'a photo of a illyrian, a type of pet.', 'a photo of a sphynx, a type of pet.', 'a photo of a allele, a type of pet.', 'a photo of a genetics, a type of pet.', 'a photo of a female, a type of pet.', 'a photo of a backcrossing, a type of pet.', 'a photo of a selective breeding, a type of pet.', 'a photo of a pup, a type of pet.', 'a photo of a merle, a type of pet.', 'a photo of a staffordshire bull terrier, a type of pet.', 'a photo of a staffordshire, a type of pet.', 'a photo of a neurological disorders, a type of pet.', 'a photo of a wheaten terrier, a type of pet.', 'a photo of a renal dysplasia, a type of pet.', "a photo of a addison's disease, a type of pet.", 'a photo of a yorkshire terrier, a type of pet.', 'a photo of a smoky, a type of pet.', 'a photo of a dog breeds, a type of pet.', 'a photo of a dander, a type of pet.', 'a photo of a portosystemic shunt, a type of pet.', 'a photo of a hypoallergenic, a type of pet.', 'a photo of a crossbreeding, a type of pet.', 'a photo of a sic, a type of pet.', 'a photo of a huddersfield ben, a type of pet.', 'a photo of a bronchitis, a type of pet.', 'a photo of a stud dog, a type of pet.']
text feature size: torch.Size([171, 1024])
Loading evaluator: Classification
Note that load_model() is skipped as no pretrained model is given (ignore this if it's done on purpose)
Evaluate on the *test* set
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([100, 37])
process logits num of label words: 171
label_probs shape: torch.Size([69, 37])
=> result
* total: 3,669
* correct: 1,596
* accuracy: 43.5%
* error: 56.5%
* macro_f1: 34.3%
